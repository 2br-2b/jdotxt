<project name="jdotxt" default="jar" basedir=".">
    <description>
        another open source cross-platform GUI for todo.txt files
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="jar"  location="jar"/>
  <property name="osxdir"  location="osxdir"/>
  <property environment="env" />

  <taskdef name="bundleapp" classname="com.oracle.appbundler.AppBundlerTask"/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init" description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac includeantruntime="false" srcdir="${src}" destdir="${build}">	
		<classpath>
			<fileset dir="libs">
			<include name="*.jar" />
			</fileset>
		</classpath> 
	</javac>
    <copy todir="build">
        <fileset dir="src" includes="**/*.png,**/*.properties,**/*.ttf" />
    </copy>
  </target>

  <target name="jar" depends="compile" description="generate the jar" >
    <!-- Create the jar directory -->
    <mkdir dir="${jar}"/>
    <!-- Put everything in ${build} into the jar file -->
    <jar jarfile="${jar}/jdotxt.jar" basedir="${build}" manifest="manifest">
        <zipgroupfileset dir="libs" includes="**/*.jar"/>
    </jar>
  </target>

  <target name="osx" depends="jar">
    <mkdir dir="${osxdir}"/>
    <bundleapp outputdirectory="${osxdir}"
               name="jdotxt"
               displayname="jdotxt"
               identifier="com.chschmid.jdotxt.Jdotxt"
               shortversion="0.3.9"
               applicationCategory="public.app-category.developer-tools"
               mainclassname="com.chschmid.jdotxt.Jdotxt"
               icon="src/res/drawable/jdotxt.icns" copyright="2014 Christian M. Schmid">
        <classpath file="${jar}/jdotxt.jar" />
    </bundleapp>
</target>

  <target name="clean" description="clean up" >
    <!-- Delete the ${build} and ${jar} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${jar}"/>
  </target>
</project>
